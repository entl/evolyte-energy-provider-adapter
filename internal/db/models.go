// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package db

import (
	"database/sql/driver"
	"fmt"
	"time"

	"github.com/jackc/pgx/v5/pgtype"
)

type Panelstatus string

const (
	PanelstatusOPERATIONAL Panelstatus = "OPERATIONAL"
	PanelstatusMAINTENANCE Panelstatus = "MAINTENANCE"
	PanelstatusOFFLINE     Panelstatus = "OFFLINE"
	PanelstatusUNKNOWN     Panelstatus = "UNKNOWN"
)

func (e *Panelstatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Panelstatus(s)
	case string:
		*e = Panelstatus(s)
	default:
		return fmt.Errorf("unsupported scan type for Panelstatus: %T", src)
	}
	return nil
}

type NullPanelstatus struct {
	Panelstatus Panelstatus
	Valid       bool // Valid is true if Panelstatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullPanelstatus) Scan(value interface{}) error {
	if value == nil {
		ns.Panelstatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.Panelstatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullPanelstatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.Panelstatus), nil
}

type Roles string

const (
	RolesADMIN Roles = "ADMIN"
	RolesUSER  Roles = "USER"
)

func (e *Roles) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Roles(s)
	case string:
		*e = Roles(s)
	default:
		return fmt.Errorf("unsupported scan type for Roles: %T", src)
	}
	return nil
}

type NullRoles struct {
	Roles Roles
	Valid bool // Valid is true if Roles is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullRoles) Scan(value interface{}) error {
	if value == nil {
		ns.Roles, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.Roles.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullRoles) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.Roles), nil
}

type AlembicVersion struct {
	VersionNum string
}

type Identity struct {
	ID             int32
	UserID         int32
	Provider       string
	ProviderUserID string
	AccessToken    pgtype.Text
	ExpiresAt      *time.Time
	CreatedAt      time.Time
	UpdatedAt      time.Time
}

type Inverter struct {
	ID                         int32
	UserID                     int32
	Vendor                     string
	Model                      string
	SerialNumber               string
	TotalLifetimeProductionKwh float64
	InstallationDate           time.Time
	CreatedAt                  time.Time
	UpdatedAt                  time.Time
}

type SolarPanel struct {
	ID               int32
	SerialNumber     string
	Name             string
	Manufacturer     pgtype.Text
	Model            pgtype.Text
	InstallationDate pgtype.Timestamp
	CapacityKw       float64
	Efficiency       pgtype.Float8
	VoltageRating    pgtype.Float8
	CurrentRating    pgtype.Float8
	Width            pgtype.Float8
	Length           pgtype.Float8
	Height           pgtype.Float8
	Weight           pgtype.Float8
	Orientation      pgtype.Float8
	Tilt             pgtype.Float8
	Status           NullPanelstatus
	Location         interface{}
	UserID           pgtype.Int4
	CreatedAt        time.Time
	UpdatedAt        time.Time
	InverterID       pgtype.Int4
}

type SolarPanelHourlyRecord struct {
	ID                     int32
	Timestamp              pgtype.Timestamp
	PowerOutputKw          float64
	EnergyGeneratedKwh     float64
	PredictedPowerOutputKw pgtype.Float8
	EfficiencyPercent      pgtype.Float8
	CellTemperatureCelsius pgtype.Float8
	TemperatureCelsius     pgtype.Float8
	Irradiance             pgtype.Float8
	PoaIrradiance          pgtype.Float8
	CloudCoverPercent      pgtype.Float8
	WindSpeedKmh           pgtype.Float8
	WindDirectionDegrees   pgtype.Float8
	HumidityPercent        pgtype.Float8
	PrecipitationMm        pgtype.Float8
	PressureMslHpa         pgtype.Float8
	ClearSkyIndex          pgtype.Float8
	CreatedAt              time.Time
	UpdatedAt              time.Time
	InverterID             int32
}

type User struct {
	ID        int32
	Email     string
	FullName  string
	Password  pgtype.Text
	CreatedAt time.Time
	UpdatedAt time.Time
	Role      Roles
}
